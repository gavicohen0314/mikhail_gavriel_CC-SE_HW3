name: assignment3

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create log file
        run: |
          echo $(date -Iminutes) > /tmp/log
          echo Mikhail Yagudaev and Gavriel Cohen >> /tmp/log

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build
          echo "image successfully built" >> /tmp/log

      - name: Update log file on failure
        if: failure()
        run: echo "image not able to be built" >> /tmp/log

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: image-tarball
          path: /tmp/image.tar

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: /tmp/log

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download image artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: image-tarball
          path: /tmp

      - name: Download log artifact
        uses: actions/download-artifact@v3
        with:
          name: log
          path: /tmp

      - name: List /tmp directory and cat log
        run: |
          ls /tmp
          cat /tmp/log

      - name: Load Docker images
        run: docker load --input /tmp/image.tar

      - name: Check books-service:latest image is loaded
        run: docker image ls

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d

      - name: Print to log if container was successfully started
        if: success()
        run: echo "Container up and running" >> /tmp/log

      - name: Print to log if container failed to launch
        if: failure()
        run: echo "Container failed to run" >> /tmp/log

      - name: Check container is running
        run: docker ps

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with pytest
        run: |
          cd tests
          pytest -v assn3_tests.py > test_results.txt

      - name: Update log file on success
        if: success()
        run: echo "tests succeeded" >> /tmp/log

      - name: Update log file on failure
        if: failure()
        run: echo "tests failed" >> /tmp/log

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: assn3_test_results
          path: tests/test_results.txt

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: /tmp/log

      - name: Stop Docker Compose
        run: docker-compose down

      - name: Remove Docker Containers and Networks
        run: |
          docker container prune -f
          docker network prune -f

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: image-tarball
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/image.tar

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d

      - name: Read query.txt file from current directory and produce response file
        run: |
          touch /tmp/response.txt
          while IFS= read -r line; do
            response=$(curl -s "http://localhost:5001/books$line")
            echo "query: $line" >> /tmp/response.txt
            echo "response: $response" >> /tmp/response.txt
          done < query.txt

      - name: Upload response file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: response
          path: /tmp/response.txt

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: /tmp/log

      - name: Stop Docker Compose
        run: docker-compose down

      - name: Remove Docker Containers and Networks
        run: |
          docker container prune -f
          docker network prune -f
