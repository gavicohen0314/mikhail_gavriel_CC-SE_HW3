name: assignment3

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t books-service ./books

      - name: Log Build Success
        run: |
          echo "$(date -Iminutes)" > log.txt
          echo "Mikhail Yagudaev and Gavriel Cohen" >> log.txt
          echo "image successfully built" >> log.txt

      - name: Upload build logs
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: log.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Run Tests
        run: |
          docker-compose exec books pytest -v tests/assn3_tests.py | tee assn3_test_results.txt
          if [ ${PIPESTATUS[0]} -eq 0 ]; then
            echo "tests succeeded" >> log.txt
          else
            echo "tests failed" >> log.txt
        continue-on-error: true

      - name: Stop Docker Compose
        run: docker-compose down

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: assn3_test_results.txt

      - name: Upload log file
        uses: actions/upload-artifact@v3
        with:
          name: log-file
          path: log.txt

  query:
    runs-on: ubuntu-latest
    needs: test
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Run Query
        run: |
          touch response.txt
          while IFS= read -r line; do
            response=$(curl -s "http://localhost:5001/books$line")
            echo "query: $line" >> response.txt
            echo "response: $response" >> response.txt
          done < query.txt
        continue-on-error: true

      - name: Upload query results
        uses: actions/upload-artifact@v3
        with:
          name: query-results
          path: response.txt

      - name: Upload log file
        uses: actions/upload-artifact@v3
        with:
          name: log-file
          path: log.txt
